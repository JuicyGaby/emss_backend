generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model access_rights {
  id                     Int                      @id @default(autoincrement())
  name                   String
  can_view               Int                      @default(0) @db.TinyInt
  can_create             Int                      @default(0) @db.TinyInt
  can_update             Int                      @default(0) @db.TinyInt
  can_delete             Int                      @default(0) @db.TinyInt
  can_manage             Int                      @default(0) @db.TinyInt
  createdAt              DateTime                 @default(now())
  employee_access_rights employee_access_rights[]
}

model employee_access_rights {
  id                  Int           @id @default(autoincrement())
  employee_id         Int
  employee_department String?       @db.VarChar(50)
  access_right_id     Int           @default(1)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  access_rights       access_rights @relation(fields: [access_right_id], references: [id])
}

// * I Start of the Demograhic Data

model patients {
  id                                       Int                                        @id @default(autoincrement())
  first_name                               String?                                    @db.VarChar(100)
  middle_name                              String?                                    @db.VarChar(100)
  last_name                                String?                                    @db.VarChar(100)
  birth_date                               String?                                    @db.VarChar(100)
  age                                      String?
  sex                                      String?                                    @db.VarChar(10)
  contact_number                           String?                                    @db.VarChar(20)
  place_of_birth                           String?                                    @db.VarChar(100)
  gender                                   String?                                    @db.VarChar(100)
  religion                                 String?                                    @db.VarChar(100)
  nationality                              String?                                    @db.VarChar(100)
  civil_status                             String?                                    @db.VarChar(100)
  living_arrangement                       String?                                    @db.VarChar(100)
  occupation                               String?                                    @db.VarChar(255)
  monthly_income                           String?                                    @db.VarChar(100)
  ph_membership_number                     String?                                    @db.VarChar(100)
  ph_membership_type                       String?                                    @db.VarChar(100)
  created_at                               DateTime                                   @default(now()) @db.DateTime(0)
  created_by                               String?                                    @db.VarChar(100)
  remarks                                  String?                                    @db.VarChar(255)
  patient_education                        patient_education[]
  addresses                                patient_address[]
  patient_educ_attainment                  patient_educ_attainment[]
  patient_family_composition               patient_family_composition[]
  patient_mswd_classification              patient_mswd_classification[]
  patient_monthly_expenses                 patient_monthly_expenses[]
  patient_medical_data                     patient_medical_data[]
  patient_health_and_mental_health         patient_health_and_mental_health[]
  patient_interview                        patient_interview[]
  patient_safety                           patient_safety[]
  patient_assessment_of_social_functioning patient_assessment_of_social_functioning[]
}

model patient_interview {
  id                       Int      @id @default(autoincrement())
  patient_id               Int
  interview_date           String?  @db.VarChar(200)
  interview_time           String?  @db.VarChar(50)
  admission_date_and_time  String?  @db.VarChar(200)
  basic_ward               String?  @db.VarChar(200)
  nonbasic_ward            String?  @db.VarChar(200)
  health_record_number     String?  @db.VarChar(200)
  mswd_number              String?  @db.VarChar(200)
  source_of_referral       String?  @db.VarChar(200)
  referring_party          String?  @db.VarChar(200)
  address                  String?  @db.VarChar(200)
  contact_number           String?  @db.VarChar(200)
  informant                String?  @db.VarChar(200)
  relationship_to_patient  String?  @db.VarChar(200)
  informant_contact_number String?  @db.VarChar(200)
  informant_address        String?  @db.VarChar(200)
  remarks                  String?  @db.VarChar(200)
  patients                 patients @relation(fields: [patient_id], references: [id])
}

model patient_education {
  id                 Int      @id @default(autoincrement())
  patient_id         Int
  education          String?  @db.VarChar(50)
  educational_status String?  @db.VarChar(50)
  patients           patients @relation(fields: [patient_id], references: [id])
}

model patient_address {
  id           Int      @id @default(autoincrement())
  patient_id   Int
  address_type String?  @db.VarChar(150)
  region       String?  @db.VarChar(150)
  province     String?  @db.VarChar(150)
  district     String?  @db.VarChar(150)
  municipality String?  @db.VarChar(150)
  barangay     String?  @db.VarChar(150)
  purok        String?  @db.VarChar(600)
  patients     patients @relation(fields: [patient_id], references: [id])
}

model patient_educ_attainment {
  id                 Int      @id @default(autoincrement())
  patient_id         Int
  highest_educ_level String?  @db.VarChar(50)
  educational_status String?  @db.VarChar(50)
  patients           patients @relation(fields: [patient_id], references: [id])
}

model patient_family_composition {
  id                     Int       @id @default(autoincrement())
  patient_id             Int
  full_name              String?   @db.VarChar(200)
  age                    String?   @db.VarChar(100)
  birth_date             DateTime? @db.Date
  civil_status           String?   @db.VarChar(50)
  relationship           String?   @db.VarChar(150)
  educational_attainment String?   @db.VarChar(100)
  occupation             String?   @db.VarChar(150)
  monthly_income         String?   @db.VarChar(200)
  other_source_of_income String?   @db.VarChar(200)
  household_size         Int?
  total_household_income String?   @db.VarChar(50)
  per_capita_income      String?   @db.VarChar(50)
  patients               patients  @relation(fields: [patient_id], references: [id])
}

// * II MSWD Classification

model patient_mswd_classification {
  id                                Int      @id @default(autoincrement())
  patient_id                        Int
  main_classification               String?  @db.VarChar(100)
  main_classification_type          String?  @db.VarChar(100)
  sub_classification_type           String?  @db.VarChar(50)
  membership_to_marginalized_sector String?  @db.VarChar(255)
  remarks                           String?  @db.VarChar(255)
  patients                          patients @relation(fields: [patient_id], references: [id])
}

// * III Monthly Expenses

model patient_monthly_expenses {
  id                  Int      @id @default(autoincrement())
  patient_id          Int
  house_lot_cost      Int?
  food_water_cost     Int?
  education_cost      Int?
  clothing_cost       Int?
  transportation_type String?  @db.VarChar(50)
  transportation_cost Int?
  communication_cost  Int?
  house_help_cost     Int?
  medical_cost        Int?
  others_description  String?  @db.VarChar(255)
  others_cost         Int?
  light_source        String?  @db.VarChar(50)
  fuel_source         String?  @db.VarChar(50)
  total_cost          Int?
  remarks             String?  @db.VarChar(500)
  patients            patients @relation(fields: [patient_id], references: [id])
}

// * IV Medical Data

model patient_medical_data {
  id                           Int      @id @default(autoincrement())
  patient_id                   Int
  admitting_diagnosis          String?  @db.VarChar(255)
  final_diagnosis              String?  @db.VarChar(255)
  duration_of_problems         String?  @db.VarChar(255)
  previous_treatment           String?  @db.VarChar(255)
  present_treatment_plan       String?  @db.VarChar(255)
  health_accessibility_problem String?  @db.VarChar(255)
  remarks                      String?  @db.VarChar(255)
  patients                     patients @relation(fields: [patient_id], references: [id])
}

// * V Health and Mental health

model patient_health_and_mental_health {
  id                                   Int   @id @default(autoincrement())
  patient_id                           Int
  abscence_of_adequate_health_services Json?
  inaccessibility_of_health_services   Json?
  abscence_of_support_health_services  Json?
  absence_of_adequate_mental_services  Json?
  inaccessibility_of_mental_services   Json?
  absence_of_support_mental_services   Json?

  patients patients @relation(fields: [patient_id], references: [id])
}

// * VI Rating and Feedback

// * VII Safety

model patient_safety {
  id                                  Int      @id @default(autoincrement())
  patient_id                          Int
  voice_crime_in_community            Json?
  unsafe_working_conditions           Json?
  unsafe_codition_home                Json?
  absence_of_adequate_safety_services Json?
  natural_disasters                   Json?
  human_created_disasters             Json?
  patients                            patients @relation(fields: [patient_id], references: [id])
}

// * VII Safety

// * VIII Assesment of Social Functioning
model patient_assessment_of_social_functioning {
  // familial roles
  id                     Int      @id @default(autoincrement())
  patient_id             Int
  parent                 Json?
  spouse                 Json?
  child                  Json?
  sibling                Json?
  other_family_member    Json?
  significant_others     Json?
  // interpersonal roles
  lover                  Json?
  friend                 Json?
  neighbor               Json?
  member                 Json?
  // occupational roles
  worker_paid_economy    Json?
  worker_home            Json?
  worker_volunteer       Json?
  student                Json?
  // Special life situation roles
  consumer               Json?
  inpatient              Json?
  outpatient             Json?
  er_patient             Json?
  prisoner               Json?
  immigrant_legal        Json?
  immigrant_undocumented Json?
  imigrant_refugee       Json?
  patients               patients @relation(fields: [patient_id], references: [id])
}

// * VIII Assesment of Social Functioning

// * IX Problems in the environment
// model patient_problems_in_the_environment {
//   id                   Int      @id @default(autoincrement())
//   patient_id           Int
//   // food and nutrition
//   lack_of_regular_food_supply Json?
//   nutritionally_Inadequate_food_supply       Json?
//   documented_malnutrition                   Json?
//   // shelter
//   absence_of_shelter                        Json?
//   substandard_shelter                       Json?
//   // employment
//   unemployment_not_available_in_community   Json?
//   underemployment_not_available_in_community Json?
//   inappropiate_employment_acceptable_in_community Json?
//   // economic resources

//   // transportation

//   patients             patients @relation(fields: [patient_id], references: [id])
// }

// * IX Problems in the environment

model ph_regions {
  id        Int            @id @default(autoincrement())
  psgcCode  String         @db.VarChar(50)
  regDesc   String         @db.VarChar(50)
  regCode   String         @unique @db.VarChar(50)
  provinces ph_provinces[]
}

model ph_provinces {
  id       Int           @id @default(autoincrement())
  psgcCode String        @db.VarChar(50)
  provDesc String        @db.VarChar(50)
  regCode  String        @db.VarChar(50)
  provCode String        @unique @db.VarChar(50)
  region   ph_regions    @relation(fields: [regCode], references: [regCode])
  cities   ph_city_mun[] // Add this line
}

model ph_city_mun {
  id          Int            @id @default(autoincrement())
  psgcCode    String         @db.VarChar(50)
  citymunDesc String         @db.VarChar(50)
  regDesc     String         @db.VarChar(50)
  provCode    String         @db.VarChar(50)
  citymunCode String         @unique @db.VarChar(50)
  province    ph_provinces   @relation(fields: [provCode], references: [provCode]) // Add this line
  barangays   ph_barangays[] // Add this line
}

model ph_barangays {
  id          Int         @id @default(autoincrement())
  brgyDesc    String      @db.VarChar(50)
  regCode     String      @db.VarChar(50)
  provCode    String      @db.VarChar(50)
  citymunCode String      @db.VarChar(50)
  brgyCode    String      @unique @db.VarChar(50)
  city        ph_city_mun @relation(fields: [citymunCode], references: [citymunCode]) // Add this line
}
