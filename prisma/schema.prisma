generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model access_rights {
  id                     Int                      @id @default(autoincrement())
  name                   String
  can_view               Int                      @default(0) @db.TinyInt
  can_create             Int                      @default(0) @db.TinyInt
  can_update             Int                      @default(0) @db.TinyInt
  can_delete             Int                      @default(0) @db.TinyInt
  can_manage             Int                      @default(0) @db.TinyInt
  createdAt              DateTime                 @default(now())
  employee_access_rights employee_access_rights[]
}

model employee_access_rights {
  id                  Int           @id @default(autoincrement())
  employee_id         Int
  employee_department String?       @db.VarChar(50)
  access_right_id     Int           @default(1)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  access_rights       access_rights @relation(fields: [access_right_id], references: [id])
}

model patients {
  id                      Int      @id @default(autoincrement())
  first_name              String?  @db.VarChar(100)
  middle_name             String?  @db.VarChar(100)
  last_name               String?  @db.VarChar(100)
  birth_date              String?  @db.VarChar(100)
  age                     String?
  sex                     String?  @db.VarChar(10)
  contact_number          String?  @db.VarChar(20)
  place_of_birth          String?  @db.VarChar(100)
  gender                  String?  @db.VarChar(100)
  religion                String?  @db.VarChar(100)
  nationality             String?  @db.VarChar(100)
  civil_status            String?  @db.VarChar(100)
  living_arrangement      String?  @db.VarChar(100)
  occupation              String?  @db.VarChar(255)
  monthly_income          String?  @db.VarChar(100)
  ph_membership_number    String?  @db.VarChar(100)
  ph_membership_type      String?  @db.VarChar(100)
  created_at              DateTime @default(now()) @db.DateTime(0)
  created_by              String?  @db.VarChar(100)
  remarks                 String?  @db.VarChar(255)
  highest_education_level String?  @db.VarChar(100)
  education_status        String?  @db.VarChar(100)

  patient_education                        patient_education[]
  addresses                                patient_address[]
  patient_family_composition               patient_family_composition[]
  patient_mswd_classification              patient_mswd_classification[]
  patient_monthly_expenses                 patient_monthly_expenses[]
  patient_medical_data                     patient_medical_data[]
  patient_health_and_mental_health         patient_health_and_mental_health[]
  patient_interview                        patient_interview[]
  patient_safety                           patient_safety[]
  patient_assessment_of_social_functioning patient_assessment_of_social_functioning[]
  patient_descrimination                   patient_descrimination[]
  patient_family_info                      patient_family_info[]
  patient_problems_environment             patient_problems_environment[]
  daily_activity_report                    daily_activity_report[]
}

model patient_interview {
  id                       Int      @id @default(autoincrement())
  patient_id               Int
  interview_date           String?  @db.VarChar(200)
  interview_time           String?  @db.VarChar(50)
  admission_date_and_time  String?  @db.VarChar(200)
  basic_ward               String?  @db.VarChar(200)
  nonbasic_ward            String?  @db.VarChar(200)
  health_record_number     String?  @db.VarChar(200)
  mswd_number              String?  @db.VarChar(200)
  source_of_referral       String?  @db.VarChar(200)
  referring_party          String?  @db.VarChar(200)
  address                  String?  @db.VarChar(200)
  contact_number           String?  @db.VarChar(200)
  informant                String?  @db.VarChar(200)
  relationship_to_patient  String?  @db.VarChar(200)
  informant_contact_number String?  @db.VarChar(200)
  informant_address        String?  @db.VarChar(200)
  remarks                  String?  @db.VarChar(200)
  patients                 patients @relation(fields: [patient_id], references: [id])
}

model patient_education {
  id                 Int      @id @default(autoincrement())
  patient_id         Int
  education          String?  @db.VarChar(50)
  educational_status String?  @db.VarChar(50)
  patients           patients @relation(fields: [patient_id], references: [id])
}

model patient_address {
  id           Int      @id @default(autoincrement())
  patient_id   Int
  address_type String?  @db.VarChar(150)
  region       String?  @db.VarChar(150)
  province     String?  @db.VarChar(150)
  district     String?  @db.VarChar(150)
  municipality String?  @db.VarChar(150)
  barangay     String?  @db.VarChar(150)
  purok        String?  @db.VarChar(600)
  patients     patients @relation(fields: [patient_id], references: [id])
}

model patient_family_composition {
  id                     Int      @id @default(autoincrement())
  patient_id             Int
  full_name              String?  @db.VarChar(200)
  age                    String?  @db.VarChar(100)
  birth_date             String?  @db.VarChar(50)
  civil_status           String?  @db.VarChar(50)
  relationship           String?  @db.VarChar(150)
  educational_attainment String?  @db.VarChar(100)
  occupation             String?  @db.VarChar(150)
  monthly_income         String?  @db.VarChar(200)
  patients               patients @relation(fields: [patient_id], references: [id])
}

model patient_family_info {
  id                     Int      @id @default(autoincrement())
  patient_id             Int
  other_source_of_income String?  @db.VarChar(200)
  household_size         String?  @db.VarChar(50)
  total_household_income String?  @db.VarChar(50)
  per_capita_income      String?  @db.VarChar(50)
  patients               patients @relation(fields: [patient_id], references: [id])
}

model patient_mswd_classification {
  id                                Int      @id @default(autoincrement())
  patient_id                        Int
  main_classification_type          String?  @db.VarChar(100)
  sub_classification_type           String?  @db.VarChar(50)
  membership_to_marginalized_sector String?  @db.VarChar(255)
  remarks                           String?  @db.VarChar(255)
  patients                          patients @relation(fields: [patient_id], references: [id])
}

model patient_monthly_expenses {
  id                  Int     @id @default(autoincrement())
  patient_id          Int     @unique
  house_lot_cost      String? @default("0") @db.VarChar(100)
  food_water_cost     String? @default("0") @db.VarChar(100)
  education_cost      String? @default("0") @db.VarChar(100)
  clothing_cost       String? @default("0") @db.VarChar(100)
  transportation_type String? @db.VarChar(300)
  transportation_cost String? @default("0") @db.VarChar(100)
  light_source_type   String? @default("0") @db.VarChar(255)
  water_source_type   String? @default("0") @db.VarChar(255)
  fuel_source_type    String? @default("0") @db.VarChar(255)
  light_source_cost   String? @default("0") @db.VarChar(100)
  water_source_cost   String? @default("0") @db.VarChar(100)
  fuel_source_cost    String? @default("0") @db.VarChar(100)
  communication_cost  String? @default("0") @db.VarChar(100)
  house_help_cost     String? @default("0") @db.VarChar(100)
  medical_cost        String? @default("0") @db.VarChar(100)
  others_description  String? @db.VarChar(100)
  others_cost         String? @db.VarChar(100)
  total_cost          String? @default("0") @db.VarChar(100)
  remarks             String? @db.VarChar(500)

  patients             patients               @relation(fields: [patient_id], references: [id])
  patient_fuel_source  patient_fuel_source[]
  patient_light_source patient_light_source[]
  patient_water_source patient_water_source[]
}

model patient_fuel_source {
  id                          Int                      @id @default(autoincrement())
  patient_monthly_expenses_id Int
  gas                         String?                  @default("0") @db.VarChar(100)
  kerosene                    String?                  @default("0") @db.VarChar(100)
  charcoal                    String?                  @default("0") @db.VarChar(100)
  patient_monthly_expenses    patient_monthly_expenses @relation(fields: [patient_monthly_expenses_id], references: [id])
}

model patient_light_source {
  id                          Int                      @id @default(autoincrement())
  patient_monthly_expenses_id Int
  electric                    String?                  @default("0") @db.VarChar(100)
  kerosene                    String?                  @default("0") @db.VarChar(100)
  candle                      String?                  @default("0") @db.VarChar(100)
  patient_monthly_expenses    patient_monthly_expenses @relation(fields: [patient_monthly_expenses_id], references: [id])
}

model patient_water_source {
  id                          Int                      @id @default(autoincrement())
  patient_monthly_expenses_id Int
  public_artesian_well        String?                  @default("0") @db.VarChar(100)
  private_artesian_well       String?                  @default("0") @db.VarChar(100)
  water_district              String?                  @default("0") @db.VarChar(100)
  patient_monthly_expenses    patient_monthly_expenses @relation(fields: [patient_monthly_expenses_id], references: [id])
}

model patient_medical_data {
  id                           Int      @id @default(autoincrement())
  patient_id                   Int
  admitting_diagnosis          String?  @db.VarChar(255)
  final_diagnosis              String?  @db.VarChar(255)
  duration_of_problems         String?  @db.VarChar(255)
  previous_treatment           String?  @db.VarChar(255)
  present_treatment_plan       String?  @db.VarChar(255)
  health_accessibility_problem String?  @db.VarChar(255)
  remarks                      String?  @db.VarChar(255)
  patients                     patients @relation(fields: [patient_id], references: [id])
}

model patient_health_and_mental_health {
  id                                   Int     @id @default(autoincrement())
  patient_id                           Int
  abscence_of_adequate_health_services Json?
  inaccessibility_of_health_services   Json?
  abscence_of_support_health_services  Json?
  absence_of_adequate_mental_services  Json?
  inaccessibility_of_mental_services   Json?
  absence_of_support_mental_services   Json?
  remarks                              String? @db.VarChar(255)

  patients patients @relation(fields: [patient_id], references: [id])
}

model patient_descrimination {
  id                 Int   @id @default(autoincrement())
  patient_id         Int
  Age                Json?
  Ethnicity          Json?
  Religion           Json?
  Sex                Json?
  Sexual_Orientation Json?
  Lifestyle          Json?
  NonCitizen         Json?
  Veteran_Status     Json?
  Dependency_Status  Json?
  Disability_Status  Json?
  Marital_Status     Json?

  patients patients @relation(fields: [patient_id], references: [id])
}

model patient_safety {
  id                                  Int      @id @default(autoincrement())
  patient_id                          Int
  voice_crime_in_community            Json?
  unsafe_working_conditions           Json?
  unsafe_codition_home                Json?
  absence_of_adequate_safety_services Json?
  natural_disasters                   Json?
  human_created_disasters             Json?
  patients                            patients @relation(fields: [patient_id], references: [id])
}

model patient_assessment_of_social_functioning {
  // familial roles
  id                     Int      @id @default(autoincrement())
  patient_id             Int
  parent                 Json?
  spouse                 Json?
  child                  Json?
  sibling                Json?
  other_family_member    Json?
  significant_others     Json?
  // interpersonal roles
  lover                  Json?
  friend                 Json?
  neighbor               Json?
  member                 Json?
  // occupational roles
  worker_paid_economy    Json?
  worker_home            Json?
  worker_volunteer       Json?
  student                Json?
  // Special life situation roles
  consumer               Json?
  inpatient              Json?
  outpatient             Json?
  er_patient             Json?
  prisoner               Json?
  immigrant_legal        Json?
  immigrant_undocumented Json?
  imigrant_refugee       Json?
  patients               patients @relation(fields: [patient_id], references: [id])
}

model patient_problems_environment {
  id                               Int     @id @default(autoincrement())
  patient_id                       Int
  // food and nutrition
  lack_regular_food                Json?
  nutritionally_inadequate_food    Json?
  documented_malnutrition          Json?
  // shelter
  absence_of_shelter               Json?
  inadequate_shelter               Json?
  // employment
  unemployment                     Json?
  underemployment                  Json?
  inappropiate_employment          Json?
  // economic resource
  insufficient_community_resources Json?
  insufficient_provide_resources   Json?
  // transportation
  no_personal_transportation       Json?
  // no problems
  no_problems                      Json?
  // affectional support system
  absence_of_affectional_support   Json?
  inadequate_support_system        Json?
  excessive_support_system         Json?
  problems_presented               String? @db.VarChar(1000)
  reasons_psychosocial_counselling String? @db.VarChar(1000)
  assesment_findings               String? @db.VarChar(500)
  recommended_intervention         String? @db.VarChar(500)
  action_taken                     String? @db.VarChar(500)
  person_emergency                 String? @db.VarChar(100)
  relationship_to_patient          String? @db.VarChar(100)
  address                          String? @db.VarChar(100)
  contact_number                   String? @db.VarChar(100)
  interviewed_by                   String? @db.VarChar(100)
  remarks                          String? @db.VarChar(255)

  patients patients @relation(fields: [patient_id], references: [id])
}

model ph_regions {
  id        Int            @id @default(autoincrement())
  psgcCode  String         @db.VarChar(50)
  regDesc   String         @db.VarChar(50)
  regCode   String         @unique @db.VarChar(50)
  provinces ph_provinces[]
}

model ph_provinces {
  id       Int           @id @default(autoincrement())
  psgcCode String        @db.VarChar(50)
  provDesc String        @db.VarChar(50)
  regCode  String        @db.VarChar(50)
  provCode String        @unique @db.VarChar(50)
  region   ph_regions    @relation(fields: [regCode], references: [regCode])
  cities   ph_city_mun[] // Add this line
}

model ph_city_mun {
  id          Int            @id @default(autoincrement())
  psgcCode    String         @db.VarChar(50)
  citymunDesc String         @db.VarChar(50)
  regDesc     String         @db.VarChar(50)
  provCode    String         @db.VarChar(50)
  citymunCode String         @unique @db.VarChar(50)
  province    ph_provinces   @relation(fields: [provCode], references: [provCode]) // Add this line
  barangays   ph_barangays[] // Add this line
}

model ph_barangays {
  id          Int         @id @default(autoincrement())
  brgyDesc    String      @db.VarChar(50)
  regCode     String      @db.VarChar(50)
  provCode    String      @db.VarChar(50)
  citymunCode String      @db.VarChar(50)
  brgyCode    String      @unique @db.VarChar(50)
  city        ph_city_mun @relation(fields: [citymunCode], references: [citymunCode]) // Add this line
}

// DAR 

model daily_activity_report {
  id                      Int       @id @default(autoincrement())
  patient_id              Int
  creator_id              Int?
  created_by              String?   @db.VarChar(100)
  date_created            DateTime  @default(now()) @db.DateTime(0)
  admission_date          DateTime?
  area                    String?   @db.VarChar(100)
  case_type               String?   @db.VarChar(100)
  indirect_contributor    String?   @db.VarChar(100)
  is_phic_member          Int?      @db.TinyInt
  phic_classification     String?   @db.VarChar(100)
  non_phic_classification String?   @db.VarChar(100)
  sectoral_grouping       String?   @db.VarChar(100)
  house_hold_size         String?   @db.VarChar(100)
  source_of_referral      String?   @db.VarChar(100)
  diagnosis               String?   @db.VarChar(100)
  informant               String?   @db.VarChar(100)
  relationship_to_patient String?   @db.VarChar(100)
  interview_start_time    String?   @db.VarChar(100)
  interview_end_time      String?   @db.VarChar(100)
  remarks                 String?   @db.VarChar(255)
  is_active               Int?      @default(1) @db.TinyInt

  dar_case_services dar_case_services[]
  dar_notes         dar_notes[]
  patients          patients            @relation(fields: [patient_id], references: [id])
}

model dar_services {
  id                Int                 @id @default(autoincrement())
  service_name      String?             @db.VarChar(100)
  dar_case_services dar_case_services[]
}

model dar_case_services {
  id                    Int                   @id @default(autoincrement())
  dar_service_id        Int
  dar_id                Int
  dar_services          dar_services          @relation(fields: [dar_service_id], references: [id])
  daily_activity_report daily_activity_report @relation(fields: [dar_id], references: [id])
}

model dar_notes {
  id           Int                   @id @default(autoincrement())
  dar_id       Int
  note_title   String?               @db.VarChar(100)
  note_body    String?               @db.VarChar(500)
  created_by   String?               @db.VarChar(100)
  creator_id   Int?
  date_created DateTime              @default(now()) @db.DateTime(0)
  dar          daily_activity_report @relation(fields: [dar_id], references: [id])
}

model dar_swa {
  id               Int                @id @default(autoincrement())
  created_by       String?            @db.VarChar(100)
  creator_name     String?            @db.VarChar(100)
  creator_id       Int?
  date_created     DateTime           @default(now()) @db.DateTime(0)
  dar_swa_services dar_swa_services[]
  dar_swa_notes    dar_swa_notes[]
}

model swa_services {
  id               Int                @id @default(autoincrement())
  service_name     String?            @db.VarChar(100)
  dar_swa_services dar_swa_services[]
}

model dar_swa_services {
  id         Int          @id @default(autoincrement())
  dar_swa_id Int
  service_id Int
  dar_swa    dar_swa      @relation(fields: [dar_swa_id], references: [id])
  services   swa_services @relation(fields: [service_id], references: [id])
}

model dar_swa_notes {
  id           Int      @id @default(autoincrement())
  dar_swa_id   Int
  note_title   String?  @db.VarChar(100)
  note_body    String?  @db.VarChar(500)
  created_by   String?  @db.VarChar(100)
  creator_id   Int?
  date_created DateTime @default(now()) @db.DateTime(0)
  dar_swa      dar_swa  @relation(fields: [dar_swa_id], references: [id])
}
